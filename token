// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract MyToken is ERC20, ERC20Burnable, Ownable(msg.sender) {
    constructor(string memory tokenName, string memory tokenSymbol) ERC20(tokenName, tokenSymbol) {}

    function mintTokens(address receiver, uint256 quantity) external onlyOwner {
        _mint(receiver, quantity);
    }

    function burnTokens(uint256 amount) public  {
        _burn(msg.sender, amount);
    }

    function transferTokens(address receiver, uint256 quantity) public virtual  returns (bool) {
        _transfer(_msgSender(), receiver, quantity);
        return true;
    }
}
